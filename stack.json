{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Kurt Geiger ALB Demo",

	"Parameters": {
		"KeyPair": {
			"Type": "AWS::EC2::KeyPair::KeyName",
			"Default": "SSH_ALB_DEMO",
			"Description": "SSH key that will be used for EC2 instances (set up in web console)",
			"ConstraintDescription": "needs to be an existing EC2 keypair (set up in web console)"
		}
	},

	"Mappings": {
		"RegionMap": {
			"us-west-1": {
				"AMI": "ami-3a674d5a"
			}
		},
		"NatRegionMap": {
			"us-west-1": {
				"AMI": "ami-6089be00"
			}
		}
	},

	"Resources": {
		"VCTSLabVPC1": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": "10.0.0.0/16",
				"EnableDnsHostnames": true,
				"Tags": [{
					"Key": "resclass",
					"Value": "vcts-lab-vpc"
				}]
			}
		},
		"VCTSLabSubnet1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"CidrBlock": "10.0.0.0/24",
				"MapPublicIpOnLaunch": true,
				"Tags": [{
						"Key": "resclass",
						"Value": "vcts-lab-subnet"
					},
					{
						"Key": "subnet-type",
						"Value": "public"
					}
				],
				"VpcId": {
					"Ref": "VCTSLabVPC1"
                },
                "AvailabilityZone": "us-west-1a"
			}
		},
		"VCTSLabSubnet2": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"CidrBlock": "10.0.1.0/24",
				"MapPublicIpOnLaunch": false,
				"Tags": [{
						"Key": "resclass",
						"Value": "vcts-lab-subnet"
					},
					{
						"Key": "subnet-type",
						"Value": "private"
					}
				],
				"VpcId": {
					"Ref": "VCTSLabVPC1"
				},
				"AvailabilityZone": "us-west-1c"
			}
		},
		"VCTSLabGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [{
					"Key": "resclass",
					"Value": "vcts-lab-gateway"
				}]
			}
		},
		"VCTSLabGatewayAttachment": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"InternetGatewayId": {
					"Ref": "VCTSLabGateway"
				},
				"VpcId": {
					"Ref": "VCTSLabVPC1"
				}
			}
		},
		"VCTSLabPublicRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VCTSLabVPC1"
				},
				"Tags": [{
						"Key": "resclass",
						"Value": "vcts-lab-routetable"
					},
					{
						"Key": "routetable-type",
						"Value": "public"
					}
				]
			}
		},
		"VCTSLabPublicDefaultRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "VCTSLabGateway"
				},
				"RouteTableId": {
					"Ref": "VCTSLabPublicRouteTable"
				}
			}
		},
		"VCTSLabPublicSubnet1Assoc": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "VCTSLabSubnet1"
				},
				"RouteTableId": {
					"Ref": "VCTSLabPublicRouteTable"
				}
			}
		},
		"VCTSLabPrivateRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VCTSLabVPC1"
				},
				"Tags": [{
						"Key": "resclass",
						"Value": "vcts-lab-routetable"
					},
					{
						"Key": "routetable-type",
						"Value": "private"
					}
				]
			}
		},
		"VCTSLabPrivateDefaultRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": "0.0.0.0/0",
				"InstanceId": {
					"Ref": "VCTSLabNatGw"
				},
				"RouteTableId": {
					"Ref": "VCTSLabPrivateRouteTable"
				}
			}
		},
		"VCTSLabPrivateSubnet2Assoc": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "VCTSLabSubnet2"
				},
				"RouteTableId": {
					"Ref": "VCTSLabPrivateRouteTable"
				}
			}
		},
		"VCTSNatSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"Tags": [{
					"Key": "resclass",
					"Value": "vcts-lab-sg"
				}],
				"GroupDescription": "NAT (External) VCTS security group",
				"VpcId": {
					"Ref": "VCTSLabVPC1"
				},
				"SecurityGroupIngress": [{
						"IpProtocol": "tcp",
						"CidrIp": "10.0.1.0/24",
						"FromPort": "80",
						"ToPort": "80"
					},
					{
						"IpProtocol": "tcp",
						"CidrIp": "10.0.1.0/24",
						"FromPort": "443",
						"ToPort": "443"
					},
					{
						"IpProtocol": "tcp",
						"CidrIp": "0.0.0.0/0",
						"FromPort": "22",
						"ToPort": "22"
					}
				],
				"SecurityGroupEgress": [{
						"IpProtocol": "tcp",
						"CidrIp": "0.0.0.0/0",
						"FromPort": "22",
						"ToPort": "22"
					},
					{
						"IpProtocol": "tcp",
						"CidrIp": "0.0.0.0/0",
						"FromPort": "80",
						"ToPort": "80"
					},
					{
						"IpProtocol": "tcp",
						"CidrIp": "0.0.0.0/0",
						"FromPort": "443",
						"ToPort": "443"
					}
				]
			}
		},
		"VCTSPrivateSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"Tags": [{
					"Key": "resclass",
					"Value": "vcts-lab-sg"
				}],
				"GroupDescription": "Private (Internal) VCTS security group",
				"VpcId": {
					"Ref": "VCTSLabVPC1"
				},
				"SecurityGroupIngress": [{
					"IpProtocol": "-1",
					"CidrIp": "0.0.0.0/0"
				}],
				"SecurityGroupEgress": [{
					"IpProtocol": "-1",
					"CidrIp": "0.0.0.0/0"
				}]
			}
		},
		"VCTSElbSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"Tags": [{
					"Key": "resclass",
					"Value": "vcts-lab-sg"
				}],
				"GroupDescription": "ELB (load balancer) VCTS security group",
				"VpcId": {
					"Ref": "VCTSLabVPC1"
				},
				"SecurityGroupIngress": [{
						"IpProtocol": "tcp",
						"CidrIp": "0.0.0.0/0",
						"FromPort": "80",
						"ToPort": "80"
					},
					{
						"IpProtocol": "tcp",
						"CidrIp": "0.0.0.0/0",
						"FromPort": "443",
						"ToPort": "443"
					}
				],
				"SecurityGroupEgress": [{
						"IpProtocol": "tcp",
						"CidrIp": "0.0.0.0/0",
						"FromPort": "80",
						"ToPort": "80"
					},
					{
						"IpProtocol": "tcp",
						"CidrIp": "0.0.0.0/0",
						"FromPort": "443",
						"ToPort": "443"
					}
				]
			}
		},
		"VCTSLabNatGw": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"ImageId": {
					"Fn::FindInMap": ["NatRegionMap", {
						"Ref": "AWS::Region"
					}, "AMI"]
				},
				"InstanceType": "t2.micro",
				"KeyName": {
					"Ref": "KeyPair"
				},
				"SubnetId": {
					"Ref": "VCTSLabSubnet1"
				},
				"SourceDestCheck": false,
				"SecurityGroupIds": [{
					"Ref": "VCTSNatSecurityGroup"
				}],
				"Tags": [{
					"Key": "resclass",
					"Value": "vcts-lab-natgw"
				}],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": ["", [
							"#!/bin/bash -xe\n",
							"/usr/bin/yum -y update\n",
							"echo \"/opt/aws/bin/cfn-signal -e $? ",
							"  --stack ", {
								"Ref": "AWS::StackName"
							}, " ",
							"  --resource VCTSLabNatGw ",
							"  --region ", {
								"Ref": "AWS::Region"
							}, " ",
							"  && sed -i 's#^/opt/aws/bin/cfn-signal .*\\$##g' ",
							"  /etc/rc.local\" >> /etc/rc.local\n",
							"/sbin/reboot\n"
						]]
					}
				}
			},
			"CreationPolicy": {
				"ResourceSignal": {
					"Count": 1,
					"Timeout": "PT10M"
				}
			}
		},

		"LoadBalancer": {
			"Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
			"Properties": {
				"Scheme": "internet-facing",
				"Name": {
					"Fn::Join": ["-", [{
						"Ref": "AWS::StackName"
					}, "LoadBalancer"]]
				},
				"Subnets": [
                    { "Ref": "VCTSLabSubnet1" },
                    { "Ref": "VCTSLabSubnet2" }
                ],
				"SecurityGroups": [{
					"Ref": "VCTSElbSecurityGroup"
				}]
			}
		},
		"TargetGroupService1": {
			"Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
			"Properties": {
				"Name": {
					"Fn::Join": ["-", [{
						"Ref": "AWS::StackName"
					}, "TargetGroupService1"]]
				},
				"Port": 80,
				"Protocol": "HTTP",
				"HealthCheckPath": "/service1",
				"VpcId": {
					"Ref": "VCTSLabVPC1"
				},
				"TargetType": "instance",
				"Targets": [{
					"Id": {
						"Ref": "VCTSLabSrv1"
					}
				}]
			}
		},
		"TargetGroupService2": {
			"Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
			"Properties": {
				"Name": {
					"Fn::Join": ["-", [{
						"Ref": "AWS::StackName"
					}, "TargetGroupService2"]]
				},
				"Port": 80,
				"Protocol": "HTTP",
				"HealthCheckPath": "/service2",
				"VpcId": {
					"Ref": "VCTSLabVPC1"
				},
				"TargetType": "instance",
				"Targets": [{
					"Id": {
						"Ref": "VCTSLabSrv2"
					}
				}]
			}
		},
		"Listener": {
			"Type": "AWS::ElasticLoadBalancingV2::Listener",
			"Properties": {
				"DefaultActions": [{
					"Type": "forward",
					"TargetGroupArn": {
						"Ref": "TargetGroupService1"
					}
				}],
				"LoadBalancerArn": {
					"Ref": "LoadBalancer"
				},
				"Port": "80",
				"Protocol": "HTTP"
			}
		},
		"ListenerRuleService1": {
			"Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
			"Properties": {
				"Actions": [{
					"TargetGroupArn": {
						"Ref": "TargetGroupService1"
					},
					"Type": "forward"
				}],
				"Conditions": [{
					"Field": "path-pattern",
					"Values": ["/service1"]
				}],
				"ListenerArn": {
					"Ref": "Listener"
				},
				"Priority": 1
			}
		},
		"ListenerRuleService2": {
			"Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
			"Properties": {
				"Actions": [{
					"TargetGroupArn": {
						"Ref": "TargetGroupService2"
					},
					"Type": "forward"
				}],
				"Conditions": [{
					"Field": "path-pattern",
					"Values": ["/service2"]
				}],
				"ListenerArn": {
					"Ref": "Listener"
				},
				"Priority": 2
			}
		},
		"VCTSLabSrv1": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"ImageId": {
					"Fn::FindInMap": ["RegionMap", {
						"Ref": "AWS::Region"
					}, "AMI"]
				},
				"InstanceType": "t2.micro",
				"KeyName": {
					"Ref": "KeyPair"
				},
				"SubnetId": {
					"Ref": "VCTSLabSubnet2"
				},
				"SecurityGroupIds": [{
					"Ref": "VCTSPrivateSecurityGroup"
				}],
				"Tags": [{
					"Key": "resclass",
					"Value": "vcts-lab-srv"
				}],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": ["", [
							"#!/bin/bash -xe\n",
							"/usr/bin/yum -y update\n",
							"/usr/bin/yum -y install httpd\n",
							"/sbin/chkconfig httpd on\n",
                            "echo '<html><head></head><body>vcts-lab-srv1</body></html>' > /var/www/html/index.html\n",
                            "echo '<html><head></head><body>service1</body></html>' > /var/www/html/service1\n",
							"echo \"/opt/aws/bin/cfn-signal -e $? ",
							"  --stack ", {
								"Ref": "AWS::StackName"
							}, " ",
							"  --resource VCTSLabSrv1 ",
							"  --region ", {
								"Ref": "AWS::Region"
							}, " ",
							"  && sed -i 's#^/opt/aws/bin/cfn-signal .*\\$##g' ",
							"  /etc/rc.local\" >> /etc/rc.local\n",
							"/sbin/reboot\n"
						]]
					}
				}
			},
			"CreationPolicy": {
				"ResourceSignal": {
					"Count": 1,
					"Timeout": "PT10M"
				}
			},
			"DependsOn": "VCTSLabNatGw"
		},
		"VCTSLabSrv2": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"ImageId": {
					"Fn::FindInMap": ["RegionMap", {
						"Ref": "AWS::Region"
					}, "AMI"]
				},
				"InstanceType": "t2.micro",
				"KeyName": {
					"Ref": "KeyPair"
				},
				"SubnetId": {
					"Ref": "VCTSLabSubnet2"
				},
				"SecurityGroupIds": [{
					"Ref": "VCTSPrivateSecurityGroup"
				}],
				"Tags": [{
					"Key": "resclass",
					"Value": "vcts-lab-srv"
				}],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": ["", [
							"#!/bin/bash -xe\n",
							"/usr/bin/yum -y update\n",
							"/usr/bin/yum -y install httpd\n",
							"/sbin/chkconfig httpd on\n",
                            "echo '<html><head></head><body>vcts-lab-srv2</body></html>' > /var/www/html/index.html\n",
                            "echo '<html><head></head><body>service2</body></html>' > /var/www/html/service2\n",
							"echo \"/opt/aws/bin/cfn-signal -e $? ",
							"  --stack ", {
								"Ref": "AWS::StackName"
							}, " ",
							"  --resource VCTSLabSrv2 ",
							"  --region ", {
								"Ref": "AWS::Region"
							}, " ",
							"  && sed -i 's#^/opt/aws/bin/cfn-signal .*\\$##g' ",
							"  /etc/rc.local\" >> /etc/rc.local\n",
							"/sbin/reboot\n"
						]]
					}
				}
			},
			"CreationPolicy": {
				"ResourceSignal": {
					"Count": 1,
					"Timeout": "PT10M"
				}
			},
			"DependsOn": "VCTSLabNatGw"
		}
	},
	"Outputs": {
		"NatIPAddr": {
			"Description": "IP address of the NAT instance (shell to this address)",
			"Value": {
				"Fn::GetAtt": ["VCTSLabNatGw", "PublicIp"]
			}
		},
		"Srv1IPAddr": {
			"Description": "IP address of srv1 (internal)",
			"Value": {
				"Fn::GetAtt": ["VCTSLabSrv1", "PrivateIp"]
			}
		},
		"Srv2IPAddr": {
			"Description": "IP address of srv2 (internal)",
			"Value": {
				"Fn::GetAtt": ["VCTSLabSrv2", "PrivateIp"]
			}
		},
		"ELBDNSName": {
			"Description": "DNS host for the ELB",
			"Value": {
				"Fn::GetAtt": ["LoadBalancer", "DNSName"]
			}
		}
	}
}